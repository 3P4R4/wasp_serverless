app TodoApp {
  wasp: {
    version: "^0.11.1"
  },
  title: "TodoApp",
  auth: {
    // Expects entity User to have username and passwords fields.
    userEntity: User,
    methods: {
      // We also support Google, GitHub and email auth, with more on the way!
      usernameAndPassword: {}
    },
    // We'll see how this is used a bit later
    onAuthFailedRedirectTo: "/login"
  }
}


route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import Main from "@client/MainPage.tsx"
}

entity Task {=psl
  id Int  @id @default(autoincrement())
  description String
  Done Boolean @default(false)
  psl=}

  entity User {=psl
    id          Int     @id @default(autoincrement())
    username    String  @unique
    password    String
psl=}

  query getTasks{
    fn: import {getTasks} from "@server/queries.js",
    entities: [Task]
  }

  action createTask {
    fn: import {createTask} from "@server/actions.js",
    entities:[Task]
  }

action updateTask {
  fn: import { updateTask } from "@server/actions.js",
  entities: [Task]
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/SignupPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/LoginPage"
}